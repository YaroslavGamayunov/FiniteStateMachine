plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.70'
    id 'jacoco'
}

group 'org.example'
version 'beta'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.3.72'
    compile "org.jetbrains.kotlin:kotlin-reflect:1.3.72"
    compile 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    doFirst {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'cli')
        }))
    }

    reports {
        xml.enabled true
        csv.enabled true
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ['-Xuse-experimental=kotlinx.serialization.InternalSerializationApi']
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main {
        java {
            srcDir 'src/kotlin'
        }
    }
}

test {
    useJUnitPlatform()
}
task runTestsWithReport {
    dependsOn test
    finalizedBy jacocoTestReport
}

task buildStateMachineCLI(type: Jar) {
    manifest {
        attributes 'Main-Class': 'cli.StateMachineCLIKt'
    }

    version = "1.0"
    archivesBaseName = "StateMachineCLI"

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task buildProblemCLI(type: Jar) {
    manifest {
        attributes 'Main-Class': 'cli.ProblemCLIKt'
    }

    version = "1.0"
    archivesBaseName = "ProblemCLI"

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}